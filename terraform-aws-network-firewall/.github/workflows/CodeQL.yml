name: "CodeQL"
env:
  deploy-version: "ver-${{ github.sha }}"

on:
  workflow_dispatch: {}
  push:
    branches:
      - "*"

permissions:
  contents: read

jobs:
  QL-Hub:
    runs-on: ubuntu-latest
    permissions: write-all
    # Download your TF LZ Blueprint code
    steps:
      - name: Clean folder
        run: rm -rf ./.??* || true
      - uses: actions/checkout@v3
        name: Checkout source code
      # Check your code wit TFLint
      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Init TFLint
        run: tflint --init

      - name: Results TFLint
        run: tflint -f compact --force

      # Install TFSec and check your security weakness
      - name: Install TFSec
        uses: actions/checkout@master
      - name: Check your code with TFSec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          tfsec_args: --soft-fail
          github_token: ${{ github.token }}
          tfsec_formats: checkstyle

      - name: TFSec Results
        run: cat results.checkstyle.xml

  QL-Spoke:
    runs-on: ubuntu-latest
    permissions: write-all
    # Download your TF LZ Blueprint code
    steps:
      - name: Clean folder
        run: rm -rf ./.??* || true
      - uses: actions/checkout@v4
        with:
          repository: terasky-int/terraform-aws-lz-blueprint-workload
          token: ${{secrets.SSH_TERRAFORM_AWS_BLUEPRINT_WORKLOAD}}
      # Check your code wit TFLint
      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Init TFLint
        run: tflint --init

      - name: Results TFLint
        run: tflint -f compact --force

      # Install TFSec and check your security weakness
      - name: Install TFSec
        uses: actions/checkout@master
      - name: Check your code with TFSec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          tfsec_args: --soft-fail
          github_token: ${{ github.token }}
          tfsec_formats: checkstyle

      - name: TFSec Results
        run: cat results.checkstyle.xml
  QL-Share:
    runs-on: ubuntu-latest
    permissions: write-all
    # Download your TF LZ Blueprint code
    steps:
      - name: Clean folder
        run: rm -rf ./.??* || true
      - uses: actions/checkout@v4
        with:
          repository: terasky-int/terraform-aws-resources-sharing
          token: ${{secrets.SSH_TERRAFORM_AWS_BLUEPRINT_WORKLOAD}}
      # Check your code wit TFLint
      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Init TFLint
        run: tflint --init

      - name: Results TFLint
        run: tflint -f compact --force

      # Install TFSec and check your security weakness
      - name: Install TFSec
        uses: actions/checkout@master
      - name: Check your code with TFSec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          tfsec_args: --soft-fail
          github_token: ${{ github.token }}
          tfsec_formats: checkstyle

      - name: TFSec Results
        run: cat results.checkstyle.xml
